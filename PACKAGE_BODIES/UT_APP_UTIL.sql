--------------------------------------------------------
--  DDL for Package Body UT_APP_UTIL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "INSTITUTE"."UT_APP_UTIL" is

   -- generated by utPLSQL for SQL Developer on 2023-04-12 13:08:55

   --
   -- test get_usertypeid_fromrole
   --
procedure get_usertypeid_fromrole is
    l_actual   integer;
    l_expected integer := 103;
begin
      -- arrange
    
      -- act
      -- app_util.get_usertypeid_fromrole;
    
      -- assert
    ut.expect(APP_UTIL.get_usertypeid_fromrole('ADM',36)).to_equal(103);
    ut.expect(APP_UTIL.get_usertypeid_fromrole('EMP',36)).to_equal(104);
    ut.expect(APP_UTIL.get_usertypeid_fromrole('STUD',36)).to_equal(105);
    ut.expect(APP_UTIL.get_usertypeid_fromrole('PAR',36)).to_equal(106);
    --ut.expect(APP_UTIL.get_usertypeid_fromrole('PARE',36)).to_equal(106);

end get_usertypeid_fromrole;

   --
   -- test get_rolenamefrom_id
   --
procedure get_rolenamefrom_id is
    l_actual   varchar2(50);
    --l_actual_1 varchar2(10);
    l_expected varchar2(50) := 'ADM';
begin
      -- arrange

      -- act
      -- app_util.get_rolenamefrom_id;
    l_actual := APP_UTIL.get_rolenamefrom_id(103);
    --l_actual_1 := APP_UTIL.get_rolenamefrom_id('ADM');
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
    --ut.expect(l_actual_1).to_equal(l_expected);
end get_rolenamefrom_id;

   --
   -- test get_usernamefrom_id
   --
procedure get_usernamefrom_id is
    l_actual   varchar2(100);
    l_expected varchar2(100) := 'laxmiA0000869@dravijinternationalschool.com';
begin
      -- arrange

      -- act
      -- app_util.get_usernamefrom_id;
    l_actual := APP_UTIL.get_usernamefrom_id(1058);
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
    --ut.expect(APP_UTIL.get_usernamefrom_id('admin@draviij.com')).to_equal('admin@dravij.com');
end get_usernamefrom_id;

   --
   -- test get_useridfrom_username
   --
procedure get_useridfrom_username is
    l_actual   integer;
    l_expected integer := 1058;
begin
      -- arrange

      -- act
      -- app_util.get_useridfrom_username;
    l_actual := APP_UTIL.get_useridfrom_username('laxmiA0000869@dravijinternationalschool.com');
    
      -- assert
      ut.expect(l_actual).to_equal(l_expected);
end get_useridfrom_username;

   --
   -- test get_instituteid_byusername
   --
procedure get_instituteid_byusername is
    l_actual   integer;
    l_expected integer := 36;
begin
      -- arrange

      -- act
      -- app_util.get_instituteid_byusername;
    l_actual := APP_UTIL.get_instituteid_byusername('laxmiA0000869@dravijinternationalschool.com');
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
    --ut.expect(APP_UTIL.get_instituteid_byusername('admin@abc.com')).to_equal(l_expected);
end get_instituteid_byusername;

   --
   -- test get_institutename_byid
   --
procedure get_institutename_byid is
    l_actual   varchar2(100);
    l_expected VARCHAR2(100) := 'Dravij International School';
begin
      -- arrange

      -- act
      -- app_util.get_institutename_byid;

      -- assert
      ut.expect(APP_UTIL.get_institutename_byid(36)).to_equal(l_expected);
      --ut.expect(APP_UTIL.get_institutename_byid(37)).to_equal('Little Sprouts Academy');
end get_institutename_byid;

   --
   -- test get_inst_name_with_code
   --
procedure get_inst_name_with_code is
    l_actual   varchar2(100);
    l_expected VARCHAR2(100) := 'DRAVIJ - Dravij International School';
begin
      -- arrange

      -- act
      -- app_util.get_inst_name_with_code;
    l_actual := APP_UTIL.get_inst_name_with_code(36);
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
    --ut.expect(APP_UTIL.get_inst_name_with_code(1)).to_equal(l_expected);
end get_inst_name_with_code;

   --
   -- test get_studentfullname_byid
   --
procedure get_studentfullname_byid is
    l_actual   varchar2(100);
    l_expected varchar2(100) := 'Akhilesh Hasmukhbhai Solanki';
begin
      -- arrange

      -- act
      -- app_util.get_studentfullname_byid;
    l_actual := APP_UTIL.get_studentfullname_byid(409);
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
    --ut.expect(APP_UTIL.get_studentfullname_byid(410)).to_equal(l_expected);
end get_studentfullname_byid;

   --
   -- test get_calculate_age
   --
procedure get_calculate_age is
    l_actual   integer;
    l_expected integer := 21;
begin
      -- arrange
    
      -- act
      -- app_util.get_calculate_age;
    l_actual := APP_UTIL.get_calculate_age(TO_CHAR(TO_DATE('1-FEB-2002','DD-MON-YY'),'MM/DD/YYYY'));
      -- assert
      
    ut.expect(l_actual).to_equal(l_expected);
    --ut.expect(APP_UTIL.get_calculate_age(TO_CHAR(TO_DATE('12-FEB-2023','DD-MON-YY'),'MM/DD/YYYY'))).to_equal(0);
    --ut.expect(APP_UTIL.get_calculate_age(SYSDATE)).to_equal(0);
end get_calculate_age;

   --
   -- test get_employeename_byid
   --
procedure get_employeename_byid is
    l_actual varchar2(100);
    l_expected varchar2(100) := 'Ashok Kamabhai Patel';
begin
      -- arrange

      -- act
      -- app_util.get_employeename_byid;
    l_actual := APP_UTIL.get_employeename_byid(70);
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
end get_employeename_byid;

   --
   -- test get_empid_byusername
   --
procedure get_empid_byusername is
    l_actual   integer;
    l_expected integer := 69;
begin
      -- arrange

      -- act
      -- app_util.get_empid_byusername;
    l_actual := APP_UTIL.get_empid_byusername('samir@dravij.com',36);
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
    --ut.expect(APP_UTIL.get_empid_byusername('MANOJBHAI@gmail.com',36)).to_equal(1107);
end get_empid_byusername;

   --
   -- test get_userid_fromname
   --
procedure get_userid_fromname is
    l_actual   integer;
    l_expected integer := 1033;
begin
      -- arrange

      -- act
      -- app_util.get_userid_fromname;
    l_actual := APP_UTIL.get_userid_fromname('admin@dravij.com');
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
end get_userid_fromname;

end ut_APP_UTIL;

/
