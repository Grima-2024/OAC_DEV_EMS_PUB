--------------------------------------------------------
--  DDL for Package Body UT_OMS_EMP_UTIL
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "INSTITUTE"."UT_OMS_EMP_UTIL" is

   -- generated by utPLSQL for SQL Developer on 2023-04-27 17:56:45

   --
   -- test get_employee_code
   --
procedure get_employee_code is
    l_actual varchar2(20);
    l_expected varchar2(20);
begin
      -- arrange

      -- act
      -- oms_emp_utl.get_employee_code;
    l_actual := OMS_EMP_UTL.get_employee_code(TO_CHAR(sysdate,'MM/DD/YYYY'),1);
      -- assert
    ut.expect(l_actual).to_equal('E2804202304');
end get_employee_code;

   --
   -- test get_emptypecode_fromusername
   --
procedure get_emptypecode_fromusername is
    l_actual   varchar2(10);
    l_expected varchar2(10);
begin
      -- arrange

      -- act
      -- oms_emp_utl.get_emptypecode_fromusername;
    l_actual := OMS_EMP_UTL.get_emptypecode_fromusername('raj@upx.com');
    
      -- assert
    ut.expect(l_actual).to_equal('INT');
end get_emptypecode_fromusername;

   --
   -- test get_empid_fromusername
   --
procedure get_empid_fromusername is
    l_actual   integer;
    l_expected integer;
begin
      -- arrange

      -- act
      -- oms_emp_utl.get_empid_fromusername;
    l_actual := OMS_EMP_UTL.get_empid_fromusername('raj@upx.com');
      -- assert
    ut.expect(l_actual).to_equal(33);
end get_empid_fromusername;

   --
   -- test delete_employee
   --
procedure delete_employee is
    l_actual integer := 0;
    l_expected integer;
begin
      -- arrange

      -- act
      -- oms_emp_utl.delete_employee;
    
      -- assert
    ut.expect(l_actual).to_equal(0);
end delete_employee;

   --
   -- test upload_emp_file
   --
procedure upload_emp_file is
    l_actual varchar2(50);
    l_expected varchar2(50);
begin
      -- arrange

      -- act
      -- oms_emp_utl.upload_emp_file;
    
      -- assert
    ut.expect(l_actual).to_equal(l_expected);
end upload_emp_file;

   --
   -- test upload_empcoll_intable
   --
procedure upload_empcoll_intable is
    l_actual   integer := 0;
    l_expected integer := 0;
begin
      -- arrange

      -- act
      -- oms_emp_utl.upload_empcoll_intable;

      -- assert
    ut.expect(l_actual).to_equal(l_expected);
end upload_empcoll_intable;

end UT_OMS_EMP_UTIL;

/
